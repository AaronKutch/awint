name: Awint CI

on: [push, pull_request]

env:
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1

jobs:
  test_suite:
    name: Test suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust components
        run: |
          rustup set profile minimal
          rustup default nightly
      - name: Run test suite
        run: |
          cargo test --all-features
          cargo test --release --all-features

  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install most recent Miri
        run: |
          rustup set profile minimal
          rustup default "nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)"
          rustup component add miri
      - name: Run test suite with Miri
        run: |
          cargo miri test

  # we run `cargo doc` here, because running `cargo doc` anywhere somehow requires `core` from the
  # target in no_alloc_test
  no_alloc_build:
    name: Doc and Build for no-std and no-alloc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install nightly-riscv32i-unknown-none-elf
        run: |
          rustup set profile minimal
          rustup default nightly
          rustup target add riscv32i-unknown-none-elf
      - name: Run `cargo doc` and `cargo build`
        run: |
          cargo doc
          cd no_alloc_test && cargo build --target riscv32i-unknown-none-elf

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Acquire the most recent nightly with a rustfmt component
      - name: Install most recent Rustfmt
        run: |
          rustup set profile minimal
          rustup default "nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/rustfmt)"
          rustup component add rustfmt
      - name: Run `cargo fmt`
        run: |
          cargo fmt -- --check
          cd no_alloc_test && cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Acquire the most recent nightly with a clippy component
      - name: Install most recent Clippy
        run: |
          rustup set profile minimal
          rustup default "nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/clippy)"
          rustup component add clippy
      - name: Run `cargo clippy`
        # note: run clippy on no_alloc_test manually
        run: |
          cargo clippy -- -D clippy::all
